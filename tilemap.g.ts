// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level4":
            case "level4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex`100010000101010101020a0b0c0c0c0c0c0c0c0c0606060607030c0b0b0b0b0b0b0b0b0c0b0b0b0b08030b0c0c0c0c0c0c0c0c0b0c0c0c0c08030c0b0b0b0b0b0c0b0c0b0c0c0c0c08030b0b0b0b0b0b0b0b0c0b0c0b0b0b08030c0c0c0c0c0c0b0b0c0b0c090101070701010101020c0c0b0c0b0c080706060606060607030b0c0c0c0b0c08030c0c0c0c0c0c08030c0b0c0b0c0c08030c0c0c0c0c0c08030c0c0b0c0c0c08030c0c0c0c0c0c08030c0c0c0c0c0b08030c0c0c0c0c0c08030c0c0c0c0c0b08030c0c0c0c0c0c08030c0c0c0c0c0b04050c0c0c0c0c0c080701010101020c0c0c0b0b0b0b0c0c040606060606050c0c0c0c0b0b0b0c0c0c0c0b0b0b0b0b`, img`
. . . . . 2 . 2 . . . . . . . . 
. . . . . 2 . . 2 2 2 2 2 2 2 . 
2 2 2 2 . . 2 . . . . . . . . 2 
. . . . . . . 2 2 2 2 2 . 2 . 2 
. . . . . . 2 2 2 2 2 2 2 2 . 2 
. 2 2 2 . . . . . . . . 2 2 . 2 
. . . . . . . . . . . . . 2 . 2 
. . . . . . . . . . . 2 . . . 2 
. . . . . . . . . . . . 2 . 2 . 
. . . . . . 2 2 2 . . . . 2 . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
. . . 2 2 2 2 . . . . . . . . . 
. . . . 2 . 2 . . . . . 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundNorth,sprites.dungeon.darkGroundNorthEast0,sprites.dungeon.darkGroundEast,sprites.dungeon.darkGroundSouthWest0,sprites.dungeon.darkGroundSouthEast0,sprites.dungeon.darkGroundSouth,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundWest,sprites.dungeon.darkGroundNorthWest0,sprites.dungeon.collectibleInsignia,sprites.castle.tileGrass2,sprites.castle.tileGrass1], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
